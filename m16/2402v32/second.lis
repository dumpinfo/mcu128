                        .module second.c
                        .area lit(rom, con, rel)
 0000           _seg_table::
 0000 3031              .byte 48,49
 0002 3233              .byte 50,51
 0004 3435              .byte 52,53
 0006 3637              .byte 54,55
 0008 3839              .byte 56,57
 000A                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32/1602.h
 000A                   .dbsym e seg_table _seg_table A[10:10]kc
                        .area text(rom, con, rel)
 0000                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32/1602.h
 0000                   .dbfunc e lcd_init _lcd_init fV
                        .even
 0000           _lcd_init::
 0000                   .dbline -1
 0000                   .dbline 37
 0000           ; //ICC-AVR application builder : 2006-12-22 20:34:51
 0000           ; // Target : M8
 0000           ; // Crystal: 6.0000Mhz
 0000           ; //1602占用了PA口作为数据口,PD2,PD3,PD4分别是RS,WR,E
 0000           ; //按纽采用循环检测方式工作，不采用中断方式.
 0000           ; 
 0000           ; 
 0000           ; #include <iom16v.h>
 0000           ; #include <macros.h>
 0000           ; #include "1602.h"
 0000           ; unsigned char led_buff[]="WWW.OUREMBED.COM        ";
 0000           ; unsigned char str1[]="oCAO XIAO YAN ZI DE EJIA ";
 0000           ; 
 0000           ; 
 0000           ; void timer1_init(void);
 0000           ; void init_devices(void);
 0000           ; unsigned char KeyPress(void);
 0000           ; void delay_ms(unsigned int time);
 0000           ; void StartCount(void);
 0000           ; void StopCount(void);
 0000           ; void Clear(void);
 0000           ; unsigned int hour=0,minute=0,second=0,ms=0;
 0000           ; unsigned char c_next=0,choose=0;
 0000           ; 
 0000           ; void port_init(void) 
 0000           ; {
 0000           ;  PORTB = 0xFF;
 0000           ;  DDRB  = 0xFF;
 0000           ;  PORTC = 0xFF; //m103 output only
 0000           ;  DDRC  = 0xFF;
 0000           ;  PORTD = 0xFF;
 0000           ;  DDRD  = 0xFF;
 0000           ;  PORTA = 0xFF;
 0000           ;  DDRA  = 0xFF;
 0000           ; }
 0000           ; 
 0000           ; //TIMER1 initialisation - prescale:8
 0000                   .dbline 38
 0000           ; // WGM: 0) Normal, TOP=0xFFFF
 0000 04E6              ldi R16,100
 0002 10E0              ldi R17,0
 0004 2CD0              rcall _delay_nms
 0006                   .dbline 39
 0006           ; // desired value: 1mSec
 0006 2227              clr R18
 0008 08E3              ldi R16,56
 000A 36D0              rcall _lcd_write_command
 000C                   .dbline 40
 000C           ; // actual value:  1.000mSec (0.0%)
 000C 04E1              ldi R16,20
 000E 10E0              ldi R17,0
 0010 26D0              rcall _delay_nms
 0012                   .dbline 41
 0012           ; void timer1_init(void)
 0012 2227              clr R18
 0014 08E3              ldi R16,56
 0016 30D0              rcall _lcd_write_command
 0018                   .dbline 42
 0018           ; {
 0018 04E1              ldi R16,20
 001A 10E0              ldi R17,0
 001C 20D0              rcall _delay_nms
 001E                   .dbline 43
 001E           ;  TCCR1B = 0x00; //stop
 001E 2227              clr R18
 0020 08E3              ldi R16,56
 0022 2AD0              rcall _lcd_write_command
 0024                   .dbline 44
 0024           ;  TCNT1H = 0x63; //setup
 0024 04E1              ldi R16,20
 0026 10E0              ldi R17,0
 0028 1AD0              rcall _delay_nms
 002A                   .dbline 46
 002A           ;  TCNT1L = 0xc0;
 002A           ;  OCR1AH = 0x17;
 002A 21E0              ldi R18,1
 002C 08E3              ldi R16,56
 002E 24D0              rcall _lcd_write_command
 0030                   .dbline 47
 0030           ;  OCR1AL = 0x70;
 0030 21E0              ldi R18,1
 0032 08E0              ldi R16,8
 0034 21D0              rcall _lcd_write_command
 0036                   .dbline 48
 0036           ;  OCR1BH = 0x17;
 0036 21E0              ldi R18,1
 0038 01E0              ldi R16,1
 003A 1ED0              rcall _lcd_write_command
 003C                   .dbline 49
 003C           ;  OCR1BL = 0x70;
 003C 21E0              ldi R18,1
 003E 06E0              ldi R16,6
 0040 1BD0              rcall _lcd_write_command
 0042                   .dbline 50
 0042           ;  ICR1H  = 0x17;
 0042 21E0              ldi R18,1
 0044 0CE0              ldi R16,12
 0046 18D0              rcall _lcd_write_command
 0048                   .dbline -2
 0048           L1:
 0048                   .dbline 0 ; func end
 0048 0895              ret
 004A                   .dbend
 004A                   .dbfunc e delay_1ms _delay_1ms fV
 004A           ;              i -> R16,R17
                        .even
 004A           _delay_1ms::
 004A                   .dbline -1
 004A                   .dbline 56
 004A           ;  ICR1L  = 0x70;
 004A           ;  TCCR1A = 0x00;
 004A           ;  TCCR1B = 0x00; //start Timer
 004A           ; }
 004A           ; 
 004A           ; #pragma interrupt_handler timer1_ovf_isr:9
 004A                   .dbline 58
 004A 0027              clr R16
 004C 1127              clr R17
 004E 02C0              rjmp L6
 0050           L3:
 0050                   .dbline 58
 0050           L4:
 0050                   .dbline 58
 0050 0F5F              subi R16,255  ; offset = 1
 0052 1F4F              sbci R17,255
 0054           L6:
 0054                   .dbline 58
 0054           ; void timer1_ovf_isr(void)
 0054           ; {
 0054 0034              cpi R16,64
 0056 E6E0              ldi R30,6
 0058 1E07              cpc R17,R30
 005A D0F3              brlo L3
 005C                   .dbline -2
 005C           L2:
 005C                   .dbline 0 ; func end
 005C 0895              ret
 005E                   .dbsym r i 16 i
 005E                   .dbend
 005E                   .dbfunc e delay_nms _delay_nms fV
 005E           ;              i -> R20,R21
 005E           ;              n -> R22,R23
                        .even
 005E           _delay_nms::
 005E 00D0              rcall push_gset2
 0060 B801              movw R22,R16
 0062                   .dbline -1
 0062                   .dbline 63
 0062           ;  //TIMER1 has overflowed
 0062           ;  TCNT1H = 0x63; //reload counter high value
 0062           ;  TCNT1L = 0xc0; //reload counter low value
 0062           ; }
 0062           ; 
 0062                   .dbline 65
 0062 4427              clr R20
 0064 5527              clr R21
 0066 03C0              rjmp L11
 0068           L8:
 0068                   .dbline 65
 0068 F0DF              rcall _delay_1ms
 006A           L9:
 006A                   .dbline 65
 006A 4F5F              subi R20,255  ; offset = 1
 006C 5F4F              sbci R21,255
 006E           L11:
 006E                   .dbline 65
 006E           ; //call this routine to initialise all peripherals
 006E           ; void init_devices(void)
 006E 4617              cp R20,R22
 0070 5707              cpc R21,R23
 0072 D0F3              brlo L8
 0074                   .dbline -2
 0074           L7:
 0074 00D0              rcall pop_gset2
 0076                   .dbline 0 ; func end
 0076 0895              ret
 0078                   .dbsym r i 20 i
 0078                   .dbsym r n 22 i
 0078                   .dbend
 0078                   .dbfunc e lcd_write_command _lcd_write_command fV
 0078           ;        wait_en -> R22
 0078           ;        command -> R20
                        .even
 0078           _lcd_write_command::
 0078 00D0              rcall push_gset2
 007A 622F              mov R22,R18
 007C 402F              mov R20,R16
 007E                   .dbline -1
 007E                   .dbline 70
 007E           ; {
 007E           ;  //stop errant interrupts until set up
 007E           ;  CLI(); //disable all interrupts
 007E           ;  port_init();
 007E           ;  timer1_init();
 007E                   .dbline 71
 007E           ; 
 007E 6623              tst R22
 0080 09F0              breq L13
 0082                   .dbline 71
 0082 3DD0              rcall _wait_enable
 0084           L13:
 0084                   .dbline 72
 0084           ;  MCUCR = 0x0A;
 0084 9098              cbi 0x12,0
 0086                   .dbline 73
 0086           ;  GICR  = 0x00;
 0086 9198              cbi 0x12,1
 0088                   .dbline 74
 0088           ;  TIMSK = 0x04; //timer interrupt sources
 0088 9298              cbi 0x12,2
 008A                   .dbline 75
 008A           ;  SEI(); //re-enable interrupts
 008A 0000              nop
 008C                   .dbline 76
 008C           ;  //all peripherals are now initialised
 008C 929A              sbi 0x12,2
 008E                   .dbline 77
 008E           ; }
 008E 4BBB              out 0x1b,R20
 0090                   .dbline 78
 0090           ; 
 0090 9298              cbi 0x12,2
 0092                   .dbline -2
 0092           L12:
 0092 00D0              rcall pop_gset2
 0094                   .dbline 0 ; func end
 0094 0895              ret
 0096                   .dbsym r wait_en 22 c
 0096                   .dbsym r command 20 c
 0096                   .dbend
 0096                   .dbfunc e display_a_char _display_a_char fV
 0096           ;   position_tem -> R22
 0096           ;      char_data -> R20
 0096           ;       position -> R10
                        .even
 0096           _display_a_char::
 0096 00D0              rcall push_gset3
 0098 422F              mov R20,R18
 009A A02E              mov R10,R16
 009C                   .dbline -1
 009C                   .dbline 84
 009C           ; //
 009C           ; void main(void)
 009C           ; {
 009C           ;  init_devices();
 009C           ;  lcd_init();
 009C           ;  //insert your functional code here...
 009C                   .dbline 86
 009C           ;  display_a_string(0,led_buff);
 009C           ;  display_a_string(1,str1);
 009C 8A2D              mov R24,R10
 009E 8831              cpi R24,24
 00A0 18F0              brlo L16
 00A2                   .dbline 87
 00A2           ;  
 00A2 682F              mov R22,R24
 00A4 6855              subi R22,88    ; addi 168
 00A6 02C0              rjmp L17
 00A8           L16:
 00A8                   .dbline 89
 00A8           ; 
 00A8           ; }
 00A8 6A2D              mov R22,R10
 00AA 6058              subi R22,128    ; addi 128
 00AC           L17:
 00AC                   .dbline 90
 00AC           ; 
 00AC 21E0              ldi R18,1
 00AE 062F              mov R16,R22
 00B0 E3DF              rcall _lcd_write_command
 00B2                   .dbline 91
 00B2           ; //延时
 00B2 042F              mov R16,R20
 00B4 18D0              rcall _lcd_write_data
 00B6                   .dbline -2
 00B6           L15:
 00B6 00D0              rcall pop_gset3
 00B8                   .dbline 0 ; func end
 00B8 0895              ret
 00BA                   .dbsym r position_tem 22 c
 00BA                   .dbsym r char_data 20 c
 00BA                   .dbsym r position 10 c
 00BA                   .dbend
 00BA                   .dbfunc e display_a_string _display_a_string fV
 00BA           ;        col_tem -> R20
 00BA           ;              i -> R22
 00BA           ;            ptr -> R10,R11
 00BA           ;            col -> R20
                        .even
 00BA           _display_a_string::
 00BA 00D0              rcall push_gset3
 00BC 5901              movw R10,R18
 00BE 402F              mov R20,R16
 00C0                   .dbline -1
 00C0                   .dbline 97
 00C0           ; void delay_ms(unsigned int time)
 00C0           ; { unsigned int i,j;
 00C0           ;   
 00C0           ;   for(j=0;j<time;j++)
 00C0           ;   { for(i=0;i<1000;i++)
 00C0           ;      time=time;
 00C0                   .dbline 99
 00C0           ;   }
 00C0           ; }
 00C0 88E1              ldi R24,24
 00C2 849F              mul R24,R20
 00C4 402D              mov R20,R0
 00C6                   .dbline 100
 00C6           ; 
 00C6 6627              clr R22
 00C8 0AC0              rjmp L22
 00CA           L19:
 00CA                   .dbline 101
 00CA E62F              mov R30,R22
 00CC FF27              clr R31
 00CE EA0D              add R30,R10
 00D0 FB1D              adc R31,R11
 00D2 2081              ldd R18,z+0
 00D4 242E              mov R2,R20
 00D6 4F5F              subi R20,255    ; addi 1
 00D8 022D              mov R16,R2
 00DA DDDF              rcall _display_a_char
 00DC           L20:
 00DC                   .dbline 100
 00DC 6395              inc R22
 00DE           L22:
 00DE                   .dbline 100
 00DE 6831              cpi R22,24
 00E0 A0F3              brlo L19
 00E2                   .dbline -2
 00E2           L18:
 00E2 00D0              rcall pop_gset3
 00E4                   .dbline 0 ; func end
 00E4 0895              ret
 00E6                   .dbsym r col_tem 20 c
 00E6                   .dbsym r i 22 c
 00E6                   .dbsym r ptr 10 pc
 00E6                   .dbsym r col 20 c
 00E6                   .dbend
 00E6                   .dbfunc e lcd_write_data _lcd_write_data fV
 00E6           ;      char_data -> R20
                        .even
 00E6           _lcd_write_data::
 00E6 00D0              rcall push_gset1
 00E8 402F              mov R20,R16
 00EA                   .dbline -1
 00EA                   .dbline 106
 00EA           ; //键盘
 00EA           ; 
 00EA           ; 
 00EA           ; 
 00EA           ; 
 00EA           ; 
 00EA                   .dbline 107
 00EA           ; 
 00EA 09D0              rcall _wait_enable
 00EC                   .dbline 108
 00EC           ; 
 00EC 909A              sbi 0x12,0
 00EE                   .dbline 109
 00EE           ; 
 00EE 9198              cbi 0x12,1
 00F0                   .dbline 110
 00F0           ; 
 00F0 9298              cbi 0x12,2
 00F2                   .dbline 111
 00F2           ; 
 00F2 0000              nop
 00F4                   .dbline 112
 00F4           ; 
 00F4 929A              sbi 0x12,2
 00F6                   .dbline 113
 00F6           ; 
 00F6 4BBB              out 0x1b,R20
 00F8                   .dbline 114
 00F8           ; 
 00F8 9298              cbi 0x12,2
 00FA                   .dbline -2
 00FA           L23:
 00FA 00D0              rcall pop_gset1
 00FC                   .dbline 0 ; func end
 00FC 0895              ret
 00FE                   .dbsym r char_data 20 c
 00FE                   .dbend
 00FE                   .dbfunc e wait_enable _wait_enable fV
                        .even
 00FE           _wait_enable::
 00FE                   .dbline -1
 00FE                   .dbline 120
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE                   .dbline 121
 00FE           ; 
 00FE D798              cbi 0x1a,7
 0100                   .dbline 122
 0100           ; 
 0100 9098              cbi 0x12,0
 0102                   .dbline 123
 0102           ; 
 0102 919A              sbi 0x12,1
 0104                   .dbline 124
 0104           ; 
 0104 0000              nop
 0106                   .dbline 125
 0106           ; 
 0106 929A              sbi 0x12,2
 0108           L25:
 0108                   .dbline 126
 0108           L26:
 0108                   .dbline 126
 0108           ; 
 0108 CF99              sbic 0x19,7
 010A FECF              rjmp L25
 010C                   .dbline 127
 010C           ; 
 010C 9298              cbi 0x12,2
 010E                   .dbline 128
 010E           ; 
 010E D79A              sbi 0x1a,7
 0110                   .dbline -2
 0110           L24:
 0110                   .dbline 0 ; func end
 0110 0895              ret
 0112                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32/1602.h
 0000           _led_buff::
 0000                   .blkb 25
                        .area idata
 0000 5757572E4F5552454D4245442E434F4D  .byte 'W,'W,'W,46,'O,'U,'R,'E,'M,'B,'E,'D,46,'C,'O,'M
 0010 202020202020202000        .byte 32,32,32,32,32,32,32,32,0
                        .area data(ram, con, rel)
 0019                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32/1602.h
 0019                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0019                   .dbsym e led_buff _led_buff A[25:25]c
 0019           _str1::
 0019                   .blkb 26
                        .area idata
 0019 6F43414F205849414F2059414E205A49  .byte 'o,'C,'A,'O,32,'X,'I,'A,'O,32,'Y,'A,'N,32,'Z,'I
 0029 20444520454A49412000      .byte 32,'D,'E,32,'E,'J,'I,'A,32,0
                        .area data(ram, con, rel)
 0033                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0033                   .dbsym e str1 _str1 A[26:26]c
 0033           _hour::
 0033                   .blkb 2
                        .area idata
 0033 0000              .word 0
                        .area data(ram, con, rel)
 0035                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0035                   .dbsym e hour _hour i
 0035           _minute::
 0035                   .blkb 2
                        .area idata
 0035 0000              .word 0
                        .area data(ram, con, rel)
 0037                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0037                   .dbsym e minute _minute i
 0037           _second::
 0037                   .blkb 2
                        .area idata
 0037 0000              .word 0
                        .area data(ram, con, rel)
 0039                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0039                   .dbsym e second _second i
 0039           _ms::
 0039                   .blkb 2
                        .area idata
 0039 0000              .word 0
                        .area data(ram, con, rel)
 003B                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 003B                   .dbsym e ms _ms i
 003B           _c_next::
 003B                   .blkb 1
                        .area idata
 003B 00                .byte 0
                        .area data(ram, con, rel)
 003C                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 003C                   .dbsym e c_next _c_next c
 003C           _choose::
 003C                   .blkb 1
                        .area idata
 003C 00                .byte 0
                        .area data(ram, con, rel)
 003D                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 003D                   .dbsym e choose _choose c
                        .area text(rom, con, rel)
 0112                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0112                   .dbfunc e port_init _port_init fV
                        .even
 0112           _port_init::
 0112                   .dbline -1
 0112                   .dbline 26
 0112                   .dbline 27
 0112 8FEF              ldi R24,255
 0114 88BB              out 0x18,R24
 0116                   .dbline 28
 0116 87BB              out 0x17,R24
 0118                   .dbline 29
 0118 85BB              out 0x15,R24
 011A                   .dbline 30
 011A 84BB              out 0x14,R24
 011C                   .dbline 31
 011C 82BB              out 0x12,R24
 011E                   .dbline 32
 011E 81BB              out 0x11,R24
 0120                   .dbline 33
 0120 8BBB              out 0x1b,R24
 0122                   .dbline 34
 0122 8ABB              out 0x1a,R24
 0124                   .dbline -2
 0124           L28:
 0124                   .dbline 0 ; func end
 0124 0895              ret
 0126                   .dbend
 0126                   .dbfunc e timer1_init _timer1_init fV
                        .even
 0126           _timer1_init::
 0126                   .dbline -1
 0126                   .dbline 42
 0126                   .dbline 43
 0126 2224              clr R2
 0128 2EBC              out 0x2e,R2
 012A                   .dbline 44
 012A 83E6              ldi R24,99
 012C 8DBD              out 0x2d,R24
 012E                   .dbline 45
 012E 80EC              ldi R24,192
 0130 8CBD              out 0x2c,R24
 0132                   .dbline 46
 0132 87E1              ldi R24,23
 0134 8BBD              out 0x2b,R24
 0136                   .dbline 47
 0136 80E7              ldi R24,112
 0138 8ABD              out 0x2a,R24
 013A                   .dbline 48
 013A 87E1              ldi R24,23
 013C 89BD              out 0x29,R24
 013E                   .dbline 49
 013E 80E7              ldi R24,112
 0140 88BD              out 0x28,R24
 0142                   .dbline 50
 0142 87E1              ldi R24,23
 0144 87BD              out 0x27,R24
 0146                   .dbline 51
 0146 80E7              ldi R24,112
 0148 86BD              out 0x26,R24
 014A                   .dbline 52
 014A 2FBC              out 0x2f,R2
 014C                   .dbline 53
 014C 2EBC              out 0x2e,R2
 014E                   .dbline -2
 014E           L29:
 014E                   .dbline 0 ; func end
 014E 0895              ret
 0150                   .dbend
                        .area vector(rom, abs)
                        .org 16
 0010 A8C0              rjmp _timer1_ovf_isr
                        .area text(rom, con, rel)
 0150                   .dbfile E:\新建文件夹\avr资料\例程\m16\2402v32\second.c
 0150                   .dbfunc e timer1_ovf_isr _timer1_ovf_isr fV
                        .even
 0150           _timer1_ovf_isr::
 0150 8A93              st -y,R24
 0152 8FB7              in R24,0x3f
 0154 8A93              st -y,R24
 0156                   .dbline -1
 0156                   .dbline 58
 0156                   .dbline 60
 0156 83E6              ldi R24,99
 0158 8DBD              out 0x2d,R24
 015A                   .dbline 61
 015A 80EC              ldi R24,192
 015C 8CBD              out 0x2c,R24
 015E                   .dbline -2
 015E           L30:
 015E 8991              ld R24,y+
 0160 8FBF              out 0x3f,R24
 0162 8991              ld R24,y+
 0164                   .dbline 0 ; func end
 0164 1895              reti
 0166                   .dbend
 0166                   .dbfunc e init_devices _init_devices fV
                        .even
 0166           _init_devices::
 0166                   .dbline -1
 0166                   .dbline 66
 0166                   .dbline 68
 0166 F894              cli
 0168                   .dbline 69
 0168 D4DF              rcall _port_init
 016A                   .dbline 70
 016A DDDF              rcall _timer1_init
 016C                   .dbline 72
 016C 8AE0              ldi R24,10
 016E 85BF              out 0x35,R24
 0170                   .dbline 73
 0170 2224              clr R2
 0172 2BBE              out 0x3b,R2
 0174                   .dbline 74
 0174 84E0              ldi R24,4
 0176 89BF              out 0x39,R24
 0178                   .dbline 75
 0178 7894              sei
 017A                   .dbline -2
 017A           L31:
 017A                   .dbline 0 ; func end
 017A 0895              ret
 017C                   .dbend
 017C                   .dbfunc e main _main fV
                        .even
 017C           _main::
 017C                   .dbline -1
 017C                   .dbline 81
 017C                   .dbline 82
 017C F4DF              rcall _init_devices
 017E                   .dbline 83
 017E 40DF              rcall _lcd_init
 0180                   .dbline 85
 0180 20E0              ldi R18,<_led_buff
 0182 30E0              ldi R19,>_led_buff
 0184 0027              clr R16
 0186 99DF              rcall _display_a_string
 0188                   .dbline 86
 0188 20E0              ldi R18,<_str1
 018A 30E0              ldi R19,>_str1
 018C 01E0              ldi R16,1
 018E 95DF              rcall _display_a_string
 0190                   .dbline -2
 0190           L32:
 0190                   .dbline 0 ; func end
 0190 0895              ret
 0192                   .dbend
 0192                   .dbfunc e delay_ms _delay_ms fV
 0192           ;              j -> R20,R21
 0192           ;              i -> R22,R23
 0192           ;           time -> R16,R17
                        .even
 0192           _delay_ms::
 0192 00D0              rcall push_gset2
 0194                   .dbline -1
 0194                   .dbline 93
 0194                   .dbline 95
 0194 4427              clr R20
 0196 5527              clr R21
 0198 0BC0              rjmp L37
 019A           L34:
 019A                   .dbline 96
 019A                   .dbline 96
 019A 6627              clr R22
 019C 7727              clr R23
 019E 02C0              rjmp L41
 01A0           L38:
 01A0                   .dbline 97
 01A0           L39:
 01A0                   .dbline 96
 01A0 6F5F              subi R22,255  ; offset = 1
 01A2 7F4F              sbci R23,255
 01A4           L41:
 01A4                   .dbline 96
 01A4 683E              cpi R22,232
 01A6 E3E0              ldi R30,3
 01A8 7E07              cpc R23,R30
 01AA D0F3              brlo L38
 01AC                   .dbline 98
 01AC           L35:
 01AC                   .dbline 95
 01AC 4F5F              subi R20,255  ; offset = 1
 01AE 5F4F              sbci R21,255
 01B0           L37:
 01B0                   .dbline 95
 01B0 4017              cp R20,R16
 01B2 5107              cpc R21,R17
 01B4 90F3              brlo L34
 01B6                   .dbline -2
 01B6           L33:
 01B6 00D0              rcall pop_gset2
 01B8                   .dbline 0 ; func end
 01B8 0895              ret
 01BA                   .dbsym r j 20 i
 01BA                   .dbsym r i 22 i
 01BA                   .dbsym r time 16 i
 01BA                   .dbend
