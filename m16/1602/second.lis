                        .module second.c
                        .area lit(rom, con, rel)
 0000           _seg_table::
 0000 3031              .byte 48,49
 0002 3233              .byte 50,51
 0004 3435              .byte 52,53
 0006 3637              .byte 54,55
 0008 3839              .byte 56,57
 000A                   .dbfile E:\avr资料\例程\m16\1602/1602.h
 000A                   .dbsym e seg_table _seg_table A[10:10]kc
                        .area text(rom, con, rel)
 0000                   .dbfile E:\avr资料\例程\m16\1602/1602.h
 0000                   .dbfunc e lcd_init _lcd_init fV
                        .even
 0000           _lcd_init::
 0000                   .dbline -1
 0000                   .dbline 37
 0000           ; //ICC-AVR application builder : 2006-12-22 20:34:51
 0000           ; // Target : M8
 0000           ; // Crystal: 6.0000Mhz
 0000           ; //1602占用了PB口作为数据口,PA6,PA5,PA4分别是RS,WR,E
 0000           ; //按纽采用循环检测方式工作，不采用中断方式.
 0000           ; 
 0000           ; 
 0000           ; #include <iom16v.h>
 0000           ; #include <macros.h>
 0000           ; #include "1602.h"
 0000           ; unsigned char led_buff[]="0000    ";
 0000           ; unsigned char str1[]="0000";
 0000           ; 
 0000           ; 
 0000           ; void timer1_init(void);
 0000           ; void init_devices(void);
 0000           ; unsigned char KeyPress(void);
 0000           ; void delay_ms(unsigned int time);
 0000           ; void StartCount(void);
 0000           ; void StopCount(void);
 0000           ; void Clear(void);
 0000           ; unsigned int hour=0,minute=0,second=0,ms=0;
 0000           ; unsigned char c_next=0,choose=0;
 0000           ; 
 0000           ; void port_init(void) 
 0000           ; {
 0000           ;  PORTB = 0xFF;
 0000           ;  DDRB  = 0xFF;
 0000           ;  PORTC = 0xFF; //m103 output only
 0000           ;  DDRC  = 0xFF;
 0000           ;  PORTD = 0xFF;
 0000           ;  DDRD  = 0xFF;
 0000           ;  PORTA = 0xFF;
 0000           ;  DDRA  = 0xFF;
 0000           ; }
 0000           ; 
 0000           ; //TIMER1 initialisation - prescale:8
 0000                   .dbline 38
 0000           ; // WGM: 0) Normal, TOP=0xFFFF
 0000 04E6              ldi R16,100
 0002 10E0              ldi R17,0
 0004 2CD0              xcall _delay_nms
 0006                   .dbline 39
 0006           ; // desired value: 1mSec
 0006 2227              clr R18
 0008 08E3              ldi R16,56
 000A 38D0              xcall _lcd_write_command
 000C                   .dbline 40
 000C           ; // actual value:  1.000mSec (0.0%)
 000C 04E1              ldi R16,20
 000E 10E0              ldi R17,0
 0010 26D0              xcall _delay_nms
 0012                   .dbline 41
 0012           ; void timer1_init(void)
 0012 2227              clr R18
 0014 08E3              ldi R16,56
 0016 32D0              xcall _lcd_write_command
 0018                   .dbline 42
 0018           ; {
 0018 04E1              ldi R16,20
 001A 10E0              ldi R17,0
 001C 20D0              xcall _delay_nms
 001E                   .dbline 43
 001E           ;  TCCR1B = 0x00; //stop
 001E 2227              clr R18
 0020 08E3              ldi R16,56
 0022 2CD0              xcall _lcd_write_command
 0024                   .dbline 44
 0024           ;  TCNT1H = 0x63; //setup
 0024 04E1              ldi R16,20
 0026 10E0              ldi R17,0
 0028 1AD0              xcall _delay_nms
 002A                   .dbline 46
 002A           ;  TCNT1L = 0xc0;
 002A           ;  OCR1AH = 0x17;
 002A 21E0              ldi R18,1
 002C 08E3              ldi R16,56
 002E 26D0              xcall _lcd_write_command
 0030                   .dbline 47
 0030           ;  OCR1AL = 0x70;
 0030 21E0              ldi R18,1
 0032 08E0              ldi R16,8
 0034 23D0              xcall _lcd_write_command
 0036                   .dbline 48
 0036           ;  OCR1BH = 0x17;
 0036 21E0              ldi R18,1
 0038 01E0              ldi R16,1
 003A 20D0              xcall _lcd_write_command
 003C                   .dbline 49
 003C           ;  OCR1BL = 0x70;
 003C 21E0              ldi R18,1
 003E 06E0              ldi R16,6
 0040 1DD0              xcall _lcd_write_command
 0042                   .dbline 50
 0042           ;  ICR1H  = 0x17;
 0042 21E0              ldi R18,1
 0044 0CE0              ldi R16,12
 0046 1AD0              xcall _lcd_write_command
 0048                   .dbline -2
 0048           L1:
 0048                   .dbline 0 ; func end
 0048 0895              ret
 004A                   .dbend
 004A                   .dbfunc e delay_1ms _delay_1ms fV
 004A           ;              i -> R16,R17
                        .even
 004A           _delay_1ms::
 004A                   .dbline -1
 004A                   .dbline 56
 004A           ;  ICR1L  = 0x70;
 004A           ;  TCCR1A = 0x00;
 004A           ;  TCCR1B = 0x00; //start Timer
 004A           ; }
 004A           ; 
 004A           ; #pragma interrupt_handler timer1_ovf_isr:9
 004A                   .dbline 58
 004A 0027              clr R16
 004C 1127              clr R17
 004E 02C0              xjmp L6
 0050           L3:
 0050                   .dbline 58
 0050           L4:
 0050                   .dbline 58
 0050 0F5F              subi R16,255  ; offset = 1
 0052 1F4F              sbci R17,255
 0054           L6:
 0054                   .dbline 58
 0054           ; void timer1_ovf_isr(void)
 0054           ; {
 0054 0034              cpi R16,64
 0056 E6E0              ldi R30,6
 0058 1E07              cpc R17,R30
 005A D0F3              brlo L3
 005C                   .dbline -2
 005C           L2:
 005C                   .dbline 0 ; func end
 005C 0895              ret
 005E                   .dbsym r i 16 i
 005E                   .dbend
 005E                   .dbfunc e delay_nms _delay_nms fV
 005E           ;              i -> R20,R21
 005E           ;              n -> R22,R23
                        .even
 005E           _delay_nms::
 005E 0E940000          xcall push_gset2
 0062 B801              movw R22,R16
 0064                   .dbline -1
 0064                   .dbline 63
 0064           ;  //TIMER1 has overflowed
 0064           ;  TCNT1H = 0x63; //reload counter high value
 0064           ;  TCNT1L = 0xc0; //reload counter low value
 0064           ; }
 0064           ; 
 0064                   .dbline 65
 0064 4427              clr R20
 0066 5527              clr R21
 0068 03C0              xjmp L11
 006A           L8:
 006A                   .dbline 65
 006A EFDF              xcall _delay_1ms
 006C           L9:
 006C                   .dbline 65
 006C 4F5F              subi R20,255  ; offset = 1
 006E 5F4F              sbci R21,255
 0070           L11:
 0070                   .dbline 65
 0070           ; //call this routine to initialise all peripherals
 0070           ; void init_devices(void)
 0070 4617              cp R20,R22
 0072 5707              cpc R21,R23
 0074 D0F3              brlo L8
 0076                   .dbline -2
 0076           L7:
 0076 0E940000          xcall pop_gset2
 007A                   .dbline 0 ; func end
 007A 0895              ret
 007C                   .dbsym r i 20 i
 007C                   .dbsym r n 22 i
 007C                   .dbend
 007C                   .dbfunc e lcd_write_command _lcd_write_command fV
 007C           ;        wait_en -> R22
 007C           ;        command -> R20
                        .even
 007C           _lcd_write_command::
 007C 0E940000          xcall push_gset2
 0080 622F              mov R22,R18
 0082 402F              mov R20,R16
 0084                   .dbline -1
 0084                   .dbline 70
 0084           ; {
 0084           ;  //stop errant interrupts until set up
 0084           ;  CLI(); //disable all interrupts
 0084           ;  port_init();
 0084           ;  timer1_init();
 0084                   .dbline 71
 0084           ; 
 0084 6623              tst R22
 0086 09F0              breq L13
 0088                   .dbline 71
 0088 45D0              xcall _wait_enable
 008A           L13:
 008A                   .dbline 72
 008A           ;  MCUCR = 0x0A;
 008A 9298              cbi 0x12,2
 008C                   .dbline 73
 008C           ;  GICR  = 0x00;
 008C 9398              cbi 0x12,3
 008E                   .dbline 74
 008E           ;  TIMSK = 0x04; //timer interrupt sources
 008E 9498              cbi 0x12,4
 0090                   .dbline 75
 0090           ;  SEI(); //re-enable interrupts
 0090 0000              nop
 0092                   .dbline 76
 0092           ;  //all peripherals are now initialised
 0092 949A              sbi 0x12,4
 0094                   .dbline 77
 0094           ; }
 0094 4BBB              out 0x1b,R20
 0096                   .dbline 78
 0096           ; 
 0096 9498              cbi 0x12,4
 0098                   .dbline -2
 0098           L12:
 0098 0E940000          xcall pop_gset2
 009C                   .dbline 0 ; func end
 009C 0895              ret
 009E                   .dbsym r wait_en 22 c
 009E                   .dbsym r command 20 c
 009E                   .dbend
 009E                   .dbfunc e display_a_char _display_a_char fV
 009E           ;   position_tem -> R22
 009E           ;      char_data -> R20
 009E           ;       position -> R10
                        .even
 009E           _display_a_char::
 009E 0E940000          xcall push_gset3
 00A2 422F              mov R20,R18
 00A4 A02E              mov R10,R16
 00A6                   .dbline -1
 00A6                   .dbline 84
 00A6           ; //
 00A6           ; void main(void)
 00A6           ; {
 00A6           ;  init_devices();
 00A6           ;  lcd_init();
 00A6           ;  //insert your functional code here...
 00A6                   .dbline 86
 00A6           ;  display_a_string(0,led_buff);
 00A6           ;  display_a_string(1,str1);
 00A6 8A2D              mov R24,R10
 00A8 8031              cpi R24,16
 00AA 18F0              brlo L16
 00AC                   .dbline 87
 00AC           ;  
 00AC 682F              mov R22,R24
 00AE 6055              subi R22,80    ; addi 176
 00B0 02C0              xjmp L17
 00B2           L16:
 00B2                   .dbline 89
 00B2           ; 
 00B2           ; }
 00B2 6A2D              mov R22,R10
 00B4 6058              subi R22,128    ; addi 128
 00B6           L17:
 00B6                   .dbline 90
 00B6           ; 
 00B6 21E0              ldi R18,1
 00B8 062F              mov R16,R22
 00BA E0DF              xcall _lcd_write_command
 00BC                   .dbline 91
 00BC           ; //延时
 00BC 042F              mov R16,R20
 00BE 1CD0              xcall _lcd_write_data
 00C0                   .dbline -2
 00C0           L15:
 00C0 0E940000          xcall pop_gset3
 00C4                   .dbline 0 ; func end
 00C4 0895              ret
 00C6                   .dbsym r position_tem 22 c
 00C6                   .dbsym r char_data 20 c
 00C6                   .dbsym r position 10 c
 00C6                   .dbend
 00C6                   .dbfunc e display_a_string _display_a_string fV
 00C6           ;        col_tem -> R20
 00C6           ;              i -> R22
 00C6           ;            ptr -> R10,R11
 00C6           ;            col -> R20
                        .even
 00C6           _display_a_string::
 00C6 0E940000          xcall push_gset3
 00CA 5901              movw R10,R18
 00CC 402F              mov R20,R16
 00CE                   .dbline -1
 00CE                   .dbline 97
 00CE           ; void delay_ms(unsigned int time)
 00CE           ; { unsigned int i,j;
 00CE           ;   
 00CE           ;   for(j=0;j<time;j++)
 00CE           ;   { for(i=0;i<1000;i++)
 00CE           ;      time=time;
 00CE                   .dbline 99
 00CE           ;   }
 00CE           ; }
 00CE 842F              mov R24,R20
 00D0 8F70              andi R24,#0x0F
 00D2 8295              swap R24
 00D4 482F              mov R20,R24
 00D6                   .dbline 100
 00D6           ; 
 00D6 6627              clr R22
 00D8 0AC0              xjmp L22
 00DA           L19:
 00DA                   .dbline 101
 00DA E62F              mov R30,R22
 00DC FF27              clr R31
 00DE EA0D              add R30,R10
 00E0 FB1D              adc R31,R11
 00E2 2081              ldd R18,z+0
 00E4 242E              mov R2,R20
 00E6 4F5F              subi R20,255    ; addi 1
 00E8 022D              mov R16,R2
 00EA D9DF              xcall _display_a_char
 00EC           L20:
 00EC                   .dbline 100
 00EC 6395              inc R22
 00EE           L22:
 00EE                   .dbline 100
 00EE 6031              cpi R22,16
 00F0 A0F3              brlo L19
 00F2                   .dbline -2
 00F2           L18:
 00F2 0E940000          xcall pop_gset3
 00F6                   .dbline 0 ; func end
 00F6 0895              ret
 00F8                   .dbsym r col_tem 20 c
 00F8                   .dbsym r i 22 c
 00F8                   .dbsym r ptr 10 pc
 00F8                   .dbsym r col 20 c
 00F8                   .dbend
 00F8                   .dbfunc e lcd_write_data _lcd_write_data fV
 00F8           ;      char_data -> R20
                        .even
 00F8           _lcd_write_data::
 00F8 0E940000          xcall push_gset1
 00FC 402F              mov R20,R16
 00FE                   .dbline -1
 00FE                   .dbline 106
 00FE           ; //键盘
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE           ; 
 00FE                   .dbline 107
 00FE           ; 
 00FE 0AD0              xcall _wait_enable
 0100                   .dbline 108
 0100           ; 
 0100 929A              sbi 0x12,2
 0102                   .dbline 109
 0102           ; 
 0102 9398              cbi 0x12,3
 0104                   .dbline 110
 0104           ; 
 0104 9498              cbi 0x12,4
 0106                   .dbline 111
 0106           ; 
 0106 0000              nop
 0108                   .dbline 112
 0108           ; 
 0108 949A              sbi 0x12,4
 010A                   .dbline 113
 010A           ; 
 010A 4BBB              out 0x1b,R20
 010C                   .dbline 114
 010C           ; 
 010C 9498              cbi 0x12,4
 010E                   .dbline -2
 010E           L23:
 010E 0E940000          xcall pop_gset1
 0112                   .dbline 0 ; func end
 0112 0895              ret
 0114                   .dbsym r char_data 20 c
 0114                   .dbend
 0114                   .dbfunc e wait_enable _wait_enable fV
                        .even
 0114           _wait_enable::
 0114                   .dbline -1
 0114                   .dbline 120
 0114           ; 
 0114           ; 
 0114           ; 
 0114           ; 
 0114           ; 
 0114           ; 
 0114                   .dbline 121
 0114           ; 
 0114 D798              cbi 0x1a,7
 0116                   .dbline 122
 0116           ; 
 0116 9298              cbi 0x12,2
 0118                   .dbline 123
 0118           ; 
 0118 939A              sbi 0x12,3
 011A                   .dbline 124
 011A           ; 
 011A 0000              nop
 011C                   .dbline 125
 011C           ; 
 011C 949A              sbi 0x12,4
 011E           L25:
 011E                   .dbline 126
 011E           L26:
 011E                   .dbline 126
 011E           ; 
 011E CF99              sbic 0x19,7
 0120 FECF              rjmp L25
 0122                   .dbline 127
 0122           ; 
 0122 9498              cbi 0x12,4
 0124                   .dbline 128
 0124           ; 
 0124 D79A              sbi 0x1a,7
 0126                   .dbline -2
 0126           L24:
 0126                   .dbline 0 ; func end
 0126 0895              ret
 0128                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile E:\avr资料\例程\m16\1602/1602.h
 0000           _led_buff::
 0000                   .blkb 9
                        .area idata
 0000 303030302020202000        .byte 48,48,48,48,32,32,32,32,0
                        .area data(ram, con, rel)
 0009                   .dbfile E:\avr资料\例程\m16\1602/1602.h
 0009                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0009                   .dbsym e led_buff _led_buff A[9:9]c
 0009           _str1::
 0009                   .blkb 5
                        .area idata
 0009 3030303000        .byte 48,48,48,48,0
                        .area data(ram, con, rel)
 000E                   .dbfile E:\avr资料\例程\m16\1602\second.c
 000E                   .dbsym e str1 _str1 A[5:5]c
 000E           _hour::
 000E                   .blkb 2
                        .area idata
 000E 0000              .word 0
                        .area data(ram, con, rel)
 0010                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0010                   .dbsym e hour _hour i
 0010           _minute::
 0010                   .blkb 2
                        .area idata
 0010 0000              .word 0
                        .area data(ram, con, rel)
 0012                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0012                   .dbsym e minute _minute i
 0012           _second::
 0012                   .blkb 2
                        .area idata
 0012 0000              .word 0
                        .area data(ram, con, rel)
 0014                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0014                   .dbsym e second _second i
 0014           _ms::
 0014                   .blkb 2
                        .area idata
 0014 0000              .word 0
                        .area data(ram, con, rel)
 0016                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0016                   .dbsym e ms _ms i
 0016           _c_next::
 0016                   .blkb 1
                        .area idata
 0016 00                .byte 0
                        .area data(ram, con, rel)
 0017                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0017                   .dbsym e c_next _c_next c
 0017           _choose::
 0017                   .blkb 1
                        .area idata
 0017 00                .byte 0
                        .area data(ram, con, rel)
 0018                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0018                   .dbsym e choose _choose c
                        .area text(rom, con, rel)
 0128                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0128                   .dbfunc e port_init _port_init fV
                        .even
 0128           _port_init::
 0128                   .dbline -1
 0128                   .dbline 26
 0128                   .dbline 27
 0128 8FEF              ldi R24,255
 012A 88BB              out 0x18,R24
 012C                   .dbline 28
 012C 87BB              out 0x17,R24
 012E                   .dbline 29
 012E 85BB              out 0x15,R24
 0130                   .dbline 30
 0130 84BB              out 0x14,R24
 0132                   .dbline 31
 0132 82BB              out 0x12,R24
 0134                   .dbline 32
 0134 81BB              out 0x11,R24
 0136                   .dbline 33
 0136 8BBB              out 0x1b,R24
 0138                   .dbline 34
 0138 8ABB              out 0x1a,R24
 013A                   .dbline -2
 013A           L28:
 013A                   .dbline 0 ; func end
 013A 0895              ret
 013C                   .dbend
 013C                   .dbfunc e timer1_init _timer1_init fV
                        .even
 013C           _timer1_init::
 013C                   .dbline -1
 013C                   .dbline 42
 013C                   .dbline 43
 013C 2224              clr R2
 013E 2EBC              out 0x2e,R2
 0140                   .dbline 44
 0140 83E6              ldi R24,99
 0142 8DBD              out 0x2d,R24
 0144                   .dbline 45
 0144 80EC              ldi R24,192
 0146 8CBD              out 0x2c,R24
 0148                   .dbline 46
 0148 87E1              ldi R24,23
 014A 8BBD              out 0x2b,R24
 014C                   .dbline 47
 014C 80E7              ldi R24,112
 014E 8ABD              out 0x2a,R24
 0150                   .dbline 48
 0150 87E1              ldi R24,23
 0152 89BD              out 0x29,R24
 0154                   .dbline 49
 0154 80E7              ldi R24,112
 0156 88BD              out 0x28,R24
 0158                   .dbline 50
 0158 87E1              ldi R24,23
 015A 87BD              out 0x27,R24
 015C                   .dbline 51
 015C 80E7              ldi R24,112
 015E 86BD              out 0x26,R24
 0160                   .dbline 52
 0160 2FBC              out 0x2f,R2
 0162                   .dbline 53
 0162 2EBC              out 0x2e,R2
 0164                   .dbline -2
 0164           L29:
 0164                   .dbline 0 ; func end
 0164 0895              ret
 0166                   .dbend
                        .area vector(rom, abs)
                        .org 32
 0020 0C94B300          jmp _timer1_ovf_isr
                        .area text(rom, con, rel)
 0166                   .dbfile E:\avr资料\例程\m16\1602\second.c
 0166                   .dbfunc e timer1_ovf_isr _timer1_ovf_isr fV
                        .even
 0166           _timer1_ovf_isr::
 0166 8A93              st -y,R24
 0168 8FB7              in R24,0x3f
 016A 8A93              st -y,R24
 016C                   .dbline -1
 016C                   .dbline 58
 016C                   .dbline 60
 016C 83E6              ldi R24,99
 016E 8DBD              out 0x2d,R24
 0170                   .dbline 61
 0170 80EC              ldi R24,192
 0172 8CBD              out 0x2c,R24
 0174                   .dbline -2
 0174           L30:
 0174 8991              ld R24,y+
 0176 8FBF              out 0x3f,R24
 0178 8991              ld R24,y+
 017A                   .dbline 0 ; func end
 017A 1895              reti
 017C                   .dbend
 017C                   .dbfunc e init_devices _init_devices fV
                        .even
 017C           _init_devices::
 017C                   .dbline -1
 017C                   .dbline 66
 017C                   .dbline 68
 017C F894              cli
 017E                   .dbline 69
 017E D4DF              xcall _port_init
 0180                   .dbline 70
 0180 DDDF              xcall _timer1_init
 0182                   .dbline 72
 0182 8AE0              ldi R24,10
 0184 85BF              out 0x35,R24
 0186                   .dbline 73
 0186 2224              clr R2
 0188 2BBE              out 0x3b,R2
 018A                   .dbline 74
 018A 84E0              ldi R24,4
 018C 89BF              out 0x39,R24
 018E                   .dbline 75
 018E 7894              sei
 0190                   .dbline -2
 0190           L31:
 0190                   .dbline 0 ; func end
 0190 0895              ret
 0192                   .dbend
 0192                   .dbfunc e main _main fV
                        .even
 0192           _main::
 0192                   .dbline -1
 0192                   .dbline 81
 0192                   .dbline 82
 0192 F4DF              xcall _init_devices
 0194                   .dbline 83
 0194 35DF              xcall _lcd_init
 0196                   .dbline 85
 0196 20E0              ldi R18,<_led_buff
 0198 30E0              ldi R19,>_led_buff
 019A 0027              clr R16
 019C 94DF              xcall _display_a_string
 019E                   .dbline 86
 019E 20E0              ldi R18,<_str1
 01A0 30E0              ldi R19,>_str1
 01A2 01E0              ldi R16,1
 01A4 90DF              xcall _display_a_string
 01A6                   .dbline -2
 01A6           L32:
 01A6                   .dbline 0 ; func end
 01A6 0895              ret
 01A8                   .dbend
 01A8                   .dbfunc e delay_ms _delay_ms fV
 01A8           ;              j -> R20,R21
 01A8           ;              i -> R22,R23
 01A8           ;           time -> R16,R17
                        .even
 01A8           _delay_ms::
 01A8 0E940000          xcall push_gset2
 01AC                   .dbline -1
 01AC                   .dbline 93
 01AC                   .dbline 95
 01AC 4427              clr R20
 01AE 5527              clr R21
 01B0 0BC0              xjmp L37
 01B2           L34:
 01B2                   .dbline 96
 01B2                   .dbline 96
 01B2 6627              clr R22
 01B4 7727              clr R23
 01B6 02C0              xjmp L41
 01B8           L38:
 01B8                   .dbline 97
 01B8           L39:
 01B8                   .dbline 96
 01B8 6F5F              subi R22,255  ; offset = 1
 01BA 7F4F              sbci R23,255
 01BC           L41:
 01BC                   .dbline 96
 01BC 683E              cpi R22,232
 01BE E3E0              ldi R30,3
 01C0 7E07              cpc R23,R30
 01C2 D0F3              brlo L38
 01C4                   .dbline 98
 01C4           L35:
 01C4                   .dbline 95
 01C4 4F5F              subi R20,255  ; offset = 1
 01C6 5F4F              sbci R21,255
 01C8           L37:
 01C8                   .dbline 95
 01C8 4017              cp R20,R16
 01CA 5107              cpc R21,R17
 01CC 90F3              brlo L34
 01CE                   .dbline -2
 01CE           L33:
 01CE 0E940000          xcall pop_gset2
 01D2                   .dbline 0 ; func end
 01D2 0895              ret
 01D4                   .dbsym r j 20 i
 01D4                   .dbsym r i 22 i
 01D4                   .dbsym r time 16 i
 01D4                   .dbend
